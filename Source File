🔹 What is a Source File in C++?
A source file in C++ is a file where we write our C++ code. This file has a .cpp extension, 
and it contains instructions for the computer to perform tasks like calculations, 
printing text, or making games! 🎮

🔹 Types of C++ Files
In C++, we work with three main file types:

File Type	Extension	Purpose
Source File	.cpp	Contains the actual C++ code
Header File	.h	Contains function declarations & reusable code
Object File	.o or .obj	Machine code generated after compilation
So, the source file (.cpp) is where you write all your logic. 📝

🔹 What’s Inside a Source File?
A C++ source file usually contains these sections:

1️⃣ Preprocessor Directives (Libraries 📚)
👉 These tell the compiler to include external code (like iostream for input/output).

#include <iostream>  // Includes the iostream library for input & output
💡 Why? Because iostream lets us use cin (input) and cout (output).

2️⃣ Namespace Declaration
👉 This makes writing code easier by allowing us to avoid writing std:: all the time.
                                using namespace std;
💡 Without it, you’d have to write:
                             std::cout << "Hello World!";
Instead of:
                              cout << "Hello World!";
3️⃣ The main() Function (Entry Point 🎯)
👉 Every C++ program must have a main() function. It’s where execution starts!

       int main() {
           cout << "Hello, C++!" << endl;  // Prints a message
            return 0;  // Ends the program
       }

💡 Why? Without main(), the compiler wouldn’t know where to start running your program!

4️⃣ Variables & Data (Memory Storage 💾)
👉 We store data inside variables.
                int age = 25;  // Stores a number
                string name = "Alice";  // Stores text
💡 Why? Variables help us store, modify, and use data in our program.

5️⃣ Functions (Reusable Code 🛠️)
👉 Functions let us organize our code into reusable blocks.
            void greet() {
                cout << "Welcome to C++!" << endl;
            }
            int main() {
                greet();  // Calling the function
                return 0;
            }
💡 Why? Instead of repeating code, we create a function once and use it many times!

6️⃣ Object-Oriented Programming (OOP 🎭)
👉 C++ supports Classes & Objects to structure code.
            class Car {
                public:
                string brand;
                void honk() {
                    cout << "Beep beep!" << endl;
                }
            };

            int main() {
                Car myCar;  // Create an object
                myCar.brand = "Toyota";
                myCar.honk();  // Call method
                return 0;
            }

💡 Why? OOP makes code organized, reusable, and modular.
🔹 Source File Compilation Process 🔄
Your .cpp file cannot be directly executed! It must go through three steps:

Step	Process	Tool
1️⃣ Preprocessing	Handles #include & #define	Preprocessor
2️⃣ Compilation	Converts .cpp into .o/.obj	Compiler (GCC, MSVC, Clang)
3️⃣ Linking	Combines files into .exe	Linker

Example using GCC (Linux/Mac/WSL):
    g++ myprogram.cpp -o myprogram
    ./myprogram  # Run the program
Example using MSVC (Windows, Visual Studio Command Prompt):
    cl myprogram.cpp
    myprogram.exe  # Run the program

🔹 Summary of a Source File 🚀
✔ It stores the actual code in a .cpp file.
✔ It has preprocessor directives, functions, variables, and OOP concepts.
✔ It must be compiled before it can run.
✔ It works with header files (.h) and object files (.o).

🔹 Example: A Complete Source File
      #include <iostream>  // Preprocessor Directive
      using namespace std;  // Avoids writing std::

      class Animal {  // OOP Class
          public:
          string name;
          void speak() {
                cout << name << " says Hello!" << endl;
          }
      };

      int main() {  // Entry Point
          Animal cat;
          cat.name = "Whiskers";
          cat.speak();  // Calls a method
          return 0;
      }

🔹 Output:
Whiskers says Hello!

🎯 Final Thoughts
💡 A C++ source file (.cpp) is where all your logic is written!
💡 It includes libraries, functions, classes, and main().
💡 The compiler converts it into machine code before execution.

🚀 Now you fully understand Source Files in C++! 🎉
