1. class and object
#include <iostream>
using namespace std;

class Car {
public:
    string color;
    
    void drive() {
        cout << "The car is driving!" << endl;
    }
};

int main() {
    Car myCar;
    myCar.color = "Red";
    myCar.drive();
    return 0;
}

2. Encapsulation
#include <iostream>
using namespace std;
class Animal {
    public:
        virtual void makeSound() { // Virtual function (can be changed)
            cout << "Animal makes a sound!" << endl;
        }
    };
    
    class Cat : public Animal {
    public:
        void makeSound() override {
            cout << "Meow! Meow!" << endl;
        }
    };
    
    int main() {
        Animal* myAnimal;
        Cat myCat;
    
        myAnimal = &myCat;
        myAnimal->makeSound();  // Calls the overridden function in Cat
    
        return 0;
    }

3. Inheritance
#include <iostream>
using namespace std;
class Animal {
    public:
        void makeSound() {
            cout << "Animal makes a sound!" << endl;
        }
    };
    
    // Dog inherits from Animal
    class Dog : public Animal {
    public:
        void bark() {
            cout << "Woof! Woof!" << endl;
        }
    };
    
    int main() {
        Dog myDog;
        myDog.makeSound(); // Inherited from Animal
        myDog.bark();      // Dog's own function
        return 0;
    }

4. Polymorphism

#include <iostream>
using namespace std;
class Animal {
    public:
        virtual void makeSound() { // Virtual function (can be changed)
            cout << "Animal makes a sound!" << endl;
        }
    };
    
    class Cat : public Animal {
    public:
        void makeSound() override {
            cout << "Meow! Meow!" << endl;
        }
    };
    
    int main() {
        Animal* myAnimal;
        Cat myCat;
    
        myAnimal = &myCat;
        myAnimal->makeSound();  // Calls the overridden function in Cat
    
        return 0;
    }

Concept -	Meaning -	Example
Class & Object -	A class is a blueprint, and an object is something made from it. - Car blueprint → Real car 🚗
Encapsulation -	Hiding data inside a class. -	Piggy bank 🐷💰
Inheritance -	A class can get features from another class. -	Parent → Child 👶
Polymorphism -	One function works differently for different objects. -	TV remote 📺
    
